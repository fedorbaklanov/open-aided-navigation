function [q_dot] = quatDotFromEuler(phi, phi_dot, theta, theta_dot, psi, psi_dot)
    %quatDotFromEuler Compute derivative of an orientation quaternion from
    %euler angles
    %
    %   This function computes a derivative of an orientation quaternion
    %   from Euler angles and their derivatives. The function uses explicit
    %   form of derivatives of the expressions that are employed to
    %   convert Euler angles to quaternions in the function
    %   lib_quatToEuler.
    %
    %   Input parameters:
    %
    %      phi, phi_dot -- roll, derivative of roll, [rad], [rad/s]
    %      theta, theta_dot -- pitch, derivative of pitch, [rad], [rad/s]
    %      psi, psi_dot -- heading, derivative of heading, [rad], [rad/s]
    
    q_dot = zeros(4,1);
    cos05phi   = cos(0.5 * phi);
    sin05phi   = sin(0.5 * phi);
    cos05theta = cos(0.5 * theta);
    sin05theta = sin(0.5 * theta);
    cos05psi   = cos(0.5 * psi);
    sin05psi   = sin(0.5 * psi);

    q_dot(1) = 0.5 * (-sin05phi * cos05theta * cos05psi * phi_dot - ...
                      cos05phi * sin05theta * cos05psi * theta_dot -...
                      cos05phi * cos05theta * sin05psi * psi_dot + ...
                      cos05phi * sin05theta * sin05psi * phi_dot + ...
                      sin05phi * cos05theta * sin05psi * theta_dot + ...
                      sin05phi * sin05theta * cos05psi * psi_dot);

    q_dot(2) = 0.5 * (cos05phi * cos05theta * cos05psi * phi_dot - ...
                      sin05phi * sin05theta * cos05psi * theta_dot -...
                      sin05phi * cos05theta * sin05psi * psi_dot + ...
                      sin05phi * sin05theta * sin05psi * phi_dot - ...
                      cos05phi * cos05theta * sin05psi * theta_dot - ...
                      cos05phi * sin05theta * cos05psi * psi_dot);

    q_dot(3) = 0.5 * (-sin05phi * sin05theta * cos05psi * phi_dot + ...
                      cos05phi * cos05theta * cos05psi * theta_dot -...
                      cos05phi * sin05theta * sin05psi * psi_dot + ...
                      cos05phi * cos05theta * sin05psi * phi_dot - ...
                      sin05phi * sin05theta * sin05psi * theta_dot + ...
                      sin05phi * cos05theta * cos05psi * psi_dot);

    q_dot(4) = 0.5 * (-sin05phi * cos05theta * sin05psi * phi_dot - ...
                      cos05phi * sin05theta * sin05psi * theta_dot +...
                      cos05phi * cos05theta * cos05psi * psi_dot - ...
                      cos05phi * sin05theta * cos05psi * phi_dot - ...
                      sin05phi * cos05theta * cos05psi * theta_dot + ...
                      sin05phi * sin05theta * sin05psi * psi_dot);
end

